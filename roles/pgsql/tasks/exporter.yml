---
#--------------------------------------------------------------#
# Config pg_exporter                        [pg_exporter_config]
#--------------------------------------------------------------#
- name: config pg_exporter
  tags: [ pg_exporter, pg_exporter_config ]
  block:

    # if pg_exporter_config is not defined, use default template
    - name: render default pg_exporter.yml config
      when: (pg_exporter_enabled|bool or pgbouncer_exporter_enabled|bool) and pg_exporter_config == 'pg_exporter.yml'
      template: src=pg_exporter.yml dest=/etc/pg_exporter.yml owner={{ pg_dbsu }} group=postgres mode=0644
      vars:
        ttl_fast: "{{ pg_exporter_cache_ttls.split(',')[0] }}"
        ttl_norm: "{{ pg_exporter_cache_ttls.split(',')[1] }}"
        ttl_slow: "{{ pg_exporter_cache_ttls.split(',')[2] }}"
        ttl_slowest: "{{ pg_exporter_cache_ttls.split(',')[3] }}"

    # otherwise, COPY use specified file
    - name: copy user provided pg_exporter.yml config
      when: (pg_exporter_enabled|bool or pgbouncer_exporter_enabled|bool) and pg_exporter_config != 'pg_exporter.yml'
      copy: src={{ pg_exporter_config }} dest=/etc/pg_exporter.yml owner={{ pg_dbsu }} group=postgres mode=0644

    # pg_exporter systemd
    - name: config default pg_exporter options
      when: pg_exporter_enabled|bool
      template: src=pg_exporter.j2 dest=/etc/default/pg_exporter owner={{ pg_dbsu }} group=postgres mode=0600

    - name: config pg_exporter systemd unit
      when: pg_exporter_enabled|bool
      template: src=pg_exporter.service.j2 dest={{ systemd_dir }}/pg_exporter.service

    # pgbouncer_exporter systemd
    - name: config pgbouncer_exporter parameters
      when: pgbouncer_exporter_enabled|bool
      template: src=pgbouncer_exporter.j2 dest=/etc/default/pgbouncer_exporter owner={{ pg_dbsu }} group=postgres mode=0600

    - name: config pgbouncer_exporter systemd unit
      when: pgbouncer_exporter_enabled|bool
      template: src=pgbouncer_exporter.service.j2 dest={{ systemd_dir }}/pgbouncer_exporter.service


#--------------------------------------------------------------#
# Launch pg_exporter                        [pg_exporter_launch]
#--------------------------------------------------------------#
- name: launch pg_exporter
  tags: [ pg_exporter, pg_exporter_launch ]
  when: pg_exporter_enabled|bool
  block:

    - name: launch pg_exporter systemd unit
      systemd: name=pg_exporter state=restarted enabled=yes daemon_reload=yes

    - name: wait for pg_exporter online
      wait_for: host=127.0.0.1 port={{ pg_exporter_port }} state=started timeout=10


#--------------------------------------------------------------#
# Launch pgbouncer_exporter          [pgbouncer_exporter_launch]
#--------------------------------------------------------------#
- name: launch pgbouncer_exporter
  tags: [ pg_exporter, pgbouncer_exporter_launch ]
  when: pgbouncer_exporter_enabled|bool
  block:

    - name: launch pgbouncer_exporter systemd service
      systemd: name=pgbouncer_exporter state=restarted enabled=yes daemon_reload=yes

    - name: wait for pgbouncer_exporter service online
      ignore_errors: true
      wait_for: host=127.0.0.1 port={{ pgbouncer_exporter_port }} state=started timeout=10



#--------------------------------------------------------------#
# Launch pgbackrest_exporter               [pgbackrest_exporter]
#--------------------------------------------------------------#
- name: launch pgbackrest_exporter
  tags: [ pgbackrest_exporter ]
  when: pgbackrest_enabled|bool and pgbouncer_exporter_enabled|bool
  block:

    - name: config default pgbackrest_exporter options
      template: src=pgbackrest_exporter.j2 dest=/etc/default/pgbackrest_exporter owner={{ pg_dbsu }} group=postgres mode=0600

    - name: config pgbackrest_exporter systemd unit
      template: src=pgbackrest_exporter.service.j2 dest={{ systemd_dir }}/pgbackrest_exporter.service

    - name: launch pgbackrest_exporter systemd service
      systemd: name=pgbackrest_exporter state=restarted enabled=yes daemon_reload=yes

    - name: wait for pgbackrest_exporter service online
      ignore_errors: true
      wait_for: host=127.0.0.1 port={{ pgbackrest_exporter|default(9854) }} state=started timeout=10

...